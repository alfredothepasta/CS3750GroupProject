@using LMSEarlyBird.ViewModels
@model CourseAssignmentsStudentViewModel

@{
    ViewData["Title"] = "Course";
}

<h1>@Model.Course.CourseName</h1> 

<div class="d-inline">
    <h3 class="text-info">Grade: @Model.LetterGrade @Model.Grade%</h3>
</div>

<h2>Assignments</h2>
@if (Model.Assignments.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Assignments[0].Assignment.Title)
                </th>
                <th>
                    Grade
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assignments[0].Assignment.DueDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Assignments[0].Assignment.Type)
                </th>   
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Assignments)
            {
                <tr>
                    <td>
                        @item.Assignment.Title
                    </td>
                    <td>
                        @if(item.Graded){
                            <p>@item.Score / @item.Assignment.maxPoints</p>
                        }
                        else{
                            <p>Not Graded</p>
                        }
                        
                    </td>
                    <td>
                        @item.Assignment.DueDate
                    </td>
                    <td>
                        @item.Assignment.Type
                    </td>
                    <td>
                        @if(!item.Submitted){
                            <a style="min-width: 6.5em;" href="@Url.Action("Submission", "Student" , new { assignmentId = item.Assignment.Id })" class="btn btn-primary" style="color: #fff;">
                                Submit
                            </a>
                        }
                        else{
                            <a href="@Url.Action("Submission", "Student" , new { assignmentId = item.Assignment.Id })" style="min-width: 6.5em;" class="btn btn-outline-success">Submitted</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
} else
{
	<p>No Course Assignments</p>
}

<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {

            var data = google.visualization.arrayToDataTable([
                ['Grade values', 'Class Grades'],
                ['A', @Model.numA],
                ['A-', @Model.numAm],
                ['B+', @Model.numBp],
                ['B', @Model.numB],
                ['B-', @Model.numBm],
                ['C+', @Model.numCp],
                ['C', @Model.numC],
                ['C-', @Model.numCm],
                ['D+', @Model.numDp],
                ['D', @Model.numD],
                ['D-', @Model.numDm],
                ['F', @Model.numF],
                ['E', @Model.numE]
            ]);

            var options = {
                title: 'Class Grades'
            };

            var chart = new google.visualization.PieChart(document.getElementById('piechart'));

            chart.draw(data, options);
        }
    </script>
</head>
<body>
    <div id="piechart" style="width: 900px; height: 500px;"></div>
</body>