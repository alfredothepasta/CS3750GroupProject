@using LMSEarlyBird.ViewModels
@model PaymentViewModel
@{
    ViewData["Title"] = "Payment Page";
}

<h1>Payment Page</h1>
@{
    // gather the current balance as it is used multiple times
    decimal balanceDue = Model.CurrentBalance;
}

<div class="row">
    <div class="col-md-4">
    <form asp-action="PaymentPage">
        <div class="form-group">
                @if (balanceDue == 0)
                {
                    <p>You have no outstanding balance</p>
                }
                else
                {
                    <label class="control-label">You currently owe: @string.Format("{0:C}", balanceDue)</label>
                    <div class="row">
                        <div class="col-md-6">
                            How much would you like to pay:
                        </div>
                        <div class="col-md-6">
                            <input asp-for="PaymentAmount" class="form-control" />
                        </div>
                    </div>
                }
        </div>
        <div class="form-group">
            @if (balanceDue != 0)
            {
                <input class="btn btn-outline-success float-right" type="submit" value="Make Payment" />
            }
            <a class="btn btn-outline-secondary" asp-controller="User" asp-action="Dashboard">Cancel</a>
        </div>
    </form>
    </div>
</div>
<div>
    @if (Model.Payments.Count == 0)
    {
        <p>You have no transactions yet</p>
    }
    else
    {
        <p>History of transactions:</p>
        <div class="row">
            @foreach (var transaction in Model.Payments)
            {
                <div class="card border col-4 px-0 m-3">
                    <div class="card-block">
                        <div class="card-header">
                            Type: @transaction.Type
                        </div>
                        <div class="card-body">
                            @if (transaction.Type == "AddClass")
                            {
                                <div class="text-danger">
                                    Amount: @string.Format("{0:C}", transaction.NetChange)
                                </div>
                            }
                            else
                            {
                                <div class="text-success">
                                    Amount: @string.Format("{0:C}", transaction.NetChange)
                                </div>
                            }
                            DateTime: @transaction.Time
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
