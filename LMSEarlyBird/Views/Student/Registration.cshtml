@using LMSEarlyBird.ViewModels
@model RegistrationViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Register For Classes</h1>
<hr/>
<div class="container mt-3">
    &nbsp;
    <form method="get" asp-action="Search" class="row g-3">
        <div class="col-auto">
            @if (Model.Search != null){
                 <input type="text" value="@Model.Search" name="query" class="form-control" />
            }
            else{
                <input type="text" name="query" placeholder="Search..." class="form-control" />
            }         
        </div>
        <div class="col-auto">
            <select name="category" class="form-select">
            <option value="all">All Departments</option>
            @foreach (string name in Model.DepartmentNames){
                @if(name == Model.SelectedDept){
                     <option value="@name" selected>@name</option>
                }
                else{
                    <option value="@name">@name</option>
                }             
            }
        </select>
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-primary"/>
        </div>
    </form>
    &nbsp;
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Course Number
                @* @Html.DisplayNameFor(model => model.Courses[0].CourseNumber) *@
            </th>
            <th>
                Course Name
                @* @Html.DisplayNameFor(model => model.Courses[0].CourseName) *@
            </th>
            <th>
                Instructor
                @* @Html.DisplayNameFor(model => model.Courses[0].CourseName) *@
            </th>
            <th>
                Credits
                @* @Html.DisplayNameFor(model => model.Courses[0].CreditHours) *@
            </th>
            <th>
                Times
                @* @Html.DisplayNameFor(model => model.Courses[0].StartTime) *@
            </th>
            <th>
                Days
                @* @Html.DisplayNameFor(model => model.Courses[0].StartTime) *@
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Courses) {
        <tr>
            <td>
                @item.Department @Html.DisplayFor(modelItem => item.CourseNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CourseName)
            </td>
             <td>
                @item.InstructorName
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreditHours)
            </td>
            <td>
                @item.StartTime - @item.EndTime
            </td>
            <td>
                @item.DaysOfWeek
            </td>
            <td>
                @if(!item.IsRegistered)
                {
                    <a href="@Url.Action("AddClass", "Student" , new { id = item.Id, search = Model.Search, deptSelected = Model.SelectedDept})" class="btn btn-primary" style="min-width: 6em;">Register</a>
                }
                else
                {
                    <a href="@Url.Action("DropClass", "Student" , new { id = item.Id, search = Model.Search, deptSelected = Model.SelectedDept})" class="btn btn-primary" style="min-width: 6em;">Drop</a>
                }         
            </td>
        </tr>
}
    </tbody>
</table>
