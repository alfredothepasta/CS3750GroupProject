@using LMSEarlyBird.ViewModels
@model SubmissionViewModel

@{
    ViewData["Title"] = "Submission";
}

<h1 style="color: #007bff;">@Model.Title</h1>
<hr/>
<div class="d-flex flex-column">
    <div class="d-flex justify-content-between">
        <div class="p-2" style="order: 1; flex: 1; max-width: 600px;">
            <p style="font-size: large;">Due: @Model.DueDate</p>
            <p style="font-weight: bold; font-size: larger;">Description:</p>
            <p>@Model.Description</p>

            @if(Model.Submitted){
                <hr/>
                @if(Model.Late){<p class="btn btn-outline-danger">LATE</p>}
                <p style="font-weight: bold;">Submitted: @Model.SubmissionDate</p>

                @if(Model.Type != "text"){
                    <table>
                        <tbody>
                            <tr>
                                <td class="pr-3">@Model.FileName</td>
                                <td><a href="@Url.Action("DownloadAssignment", "Instructor", new {
                                    studentId = @Model.StudentId,
                                    courseId = @Model.CourseId,
                                    assignmentId = @Model.AssignmentId,
                                    fileName = @Model.FileName})" class="text-primary">Download</a></td>
                            </tr>
                        </tbody>
                    </table>
                }
                else{
                    <input class="form-control" type="text" value="@Model.SubmissionTxt" readonly />
                }
            }
        </div>
        <div class="p-2 text-right" style="order: 2; flex: 2; min-width: 250px; max-width: 300px;">
            <div class="mb-3 text-left">
                @if(Model.Graded){
                    <h3 class="form-label" style="font-weight: bold;">Graded: @Model.Score/@Model.MaxPoints</h3>
                }
                else{
                    <h3 class="form-label" style="font-weight: bold;">Not Graded</h3>
                }
            </div>
            <div class="mb-3 text-left">
                <p>Instructor Feedback:</p>
                <textarea class="form-control" rows="4" placeholder="@Model.SubmissionComment" readonly></textarea>
            </div>
        </div>
    </div>

    <hr/>

    <form asp-action="Submission" asp-controller="Student" method="post" enctype="multipart/form-data">
        @if(Model.Submitted){
            <p style="font-weight: bold; font-size: larger;">New Submission:</p>
        }
        else{
            <p style="font-weight: bold; font-size: larger;">Submission:</p>
        }
        <input type="hidden" name="assignmentId" value="@Model.AssignmentId" />
        
        @if (Model.Type == "text")
        {
            <textarea asp-for="SubmissionTxt" class="form-control" style="height: 200px;">@Model.SubmissionTxt</textarea>
            <span asp-validation-for="SubmissionTxt" class="text-danger"></span>
        }
        else if (Model.Type == "file")
        {
            <input asp-for="File" type="file" class="form-control" />
            <span asp-validation-for="File" class="text-danger"></span>
        }

        @if(!Model.Submitted){
            <button type="submit" class="btn btn-primary" style="margin: 1em;">Submit</button>
        }
        else{
            <button type="submit" class="btn btn-outline-success" style="margin: 1em;">Resubmit</button>
        } 
    </form>
    
</div>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load("current", { packages: ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
                ["Score range", "Number of students", { role: "style" }],
                ["0%-20%", @Model.num20p, "red"],
                ["20%-40%", @Model.num40p, "red"],
                ["40%-60%", @Model.num60p, "red"],
                ["60%-80%", @Model.num80p, "green"],
                ["80%-100%", @Model.num100p, "green"]
            ]);

            var view = new google.visualization.DataView(data);
            view.setColumns([0, 1,
                {
                    calc: "stringify",
                    sourceColumn: 1,
                    type: "string",
                    role: "annotation"
                },
                2]);

            var options = {
                title: "Class performance on '@Model.Title'",
                width: 600,
                height: 400,
                bar: { groupWidth: "95%" },
                legend: { position: "none" },
            };
            var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
            chart.draw(view, options);
        }
    </script>
    @if (Model.Graded)
    {
        <div class="container" id="columnchart_values" style="width: 900px; height: 300px;"></div>    
    }
        </br>
        </br>


