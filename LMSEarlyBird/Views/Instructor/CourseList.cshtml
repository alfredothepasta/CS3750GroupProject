@using LMSEarlyBird.ViewModels  
@model CourseListViewModel

@{
    ViewData["Title"] = "Dashboard";
}

<h1>Your Courses</h1>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Class', 'Average Grade', { role: 'style' }],
    @*Injectected text to build the JS dynamically*@
    @foreach(KeyValuePair<string, double> entry in Model.AvgScorePerCourse)
    {
        string key = $"{entry.Key}";
        string value = $"{entry.Value}";
        <text>['@key', @value, 'color:gray'],
        </text>
    }
    @*End Dynamic script generation*@
        ]);

        var options = {
            title: "Average Grade Per Course",
            width: 600,
            height: 400,
            bar: { groupWidth: "95%" },
            legend: { position: "none" },
            hAxis: {
                title: '% Score of All Students',
                minValue: 0,
                maxValue: 100
            },
        };
        var chart = new google.visualization.BarChart(document.getElementById("avgGradeChart"));
        chart.draw(data, options);
    }
</script>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].CourseNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Courses[0].CourseName)
            </th>
            <th>
				Details
            </th>
			<th>
				Edit
            </th>   
            <th>
				Delete
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Courses)
        {
            <tr>
                        <td>
                                    @Html.DisplayFor(modelItem => item.CourseNumber)
                        </td>
                        <td>
                                    @Html.DisplayFor(modelItem => item.CourseName)
                        </td>
                        <td>
					<a href="">Details</a>
                        </td>
                        <td>
                            <a class="btn btn-primary" asp-action="EditCourse" asp-controller="Instructor" asp-route-courseId="@item.id">Edit</a>
                        </td>
                        <td>
                            <a class="btn btn-danger" asp-controller="Instructor" asp-action="DeleteCourse" asp-route-courseId="@item.id">Delete</a>
                        </td>
                            </tr>
        }
		<tr>
			<td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
            </td>
            <td>
                <a class="btn btn-success" asp-controller="Instructor" asp-action="AddCourse">Create</a>
            </td>
    </tbody>
</table>
<div id="avgGradeChart" />